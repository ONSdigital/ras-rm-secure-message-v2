apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge:  {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      env: {{ .Values.env }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        env: {{ .Values.env }}
    spec:
      volumes:
        - name: google-cloud-key
          secret:
            secretName: google-application-credentials
        {{- if .Values.database.sqlProxyEnabled }}
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-proxy-credentials
            defaultMode: 0444
            items:
            - key: "credentials.json"
              path: "credentials.json"
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
           {{- if eq .Values.image.tag "latest"}}
          image: "{{ .Values.image.name }}/{{ .Chart.Name }}:{{ .Chart.AppVersion }}"
          {{- else}}
          image: "{{ .Values.image.devRepo }}/{{ .Chart.Name }}:{{ .Values.image.tag }}"
          {{- end}}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: google-cloud-key
            mountPath: /var/secrets/google
          ports:
            - name: http-server
              containerPort: {{ .Values.container.port }}
          readinessProbe:
            httpGet:
              path: /info
              port: {{ .Values.container.port }}
            initialDelaySeconds: 5
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /info
              port: {{ .Values.container.port }}
            initialDelaySeconds: 5
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          env:
          - name: PORT
            value: "{{ .Values.container.port }}"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/secrets/google/credentials.json
          resources:
            {{ toYaml .Values.resources.application | nindent 12 }}
